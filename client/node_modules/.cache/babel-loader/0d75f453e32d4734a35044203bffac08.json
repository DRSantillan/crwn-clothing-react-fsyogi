{"ast":null,"code":"import { createSelector } from 'reselect';\nimport memoize from 'lodash.memoize'; //\n\nconst selectShop = state => state.shop; //\n\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections); //\n\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []); //\n\nexport const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null)); //\n\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching); //\n\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/redux/shop/shop.selectors.js"],"names":["createSelector","memoize","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,OAAP,MAAoB,gBAApB,C,CAGA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CACA;;;AACA,OAAO,MAAMC,iBAAiB,GAAGL,cAAc,CAC9C,CAACE,UAAD,CAD8C,EAE9CE,IAAI,IAAIA,IAAI,CAACE,WAFiC,CAAxC,C,CAIP;;AACA,OAAO,MAAMC,2BAA2B,GAAGP,cAAc,CACxD,CAACK,iBAAD,CADwD,EAExDC,WAAW,IACVA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAHf,CAAlD,C,CAKP;;AACA,OAAO,MAAMC,gBAAgB,GAAGX,OAAO,CAACY,kBAAkB,IACzDb,cAAc,CAAC,CAACK,iBAAD,CAAD,EAAsBC,WAAW,IAC9CA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IADnC,CADwB,CAAhC,C,CAKP;;AACA,OAAO,MAAMC,0BAA0B,GAAGd,cAAc,CACvD,CAACE,UAAD,CADuD,EAEvDE,IAAI,IAAIA,IAAI,CAACW,UAF0C,CAAjD,C,CAIP;;AACA,OAAO,MAAMC,yBAAyB,GAAGhB,cAAc,CACtD,CAACE,UAAD,CADsD,EAEtDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFuC,CAAhD","sourcesContent":["import { createSelector } from 'reselect';\nimport memoize from 'lodash.memoize';\n\n\n//\nconst selectShop = state => state.shop;\n//\nexport const selectCollections = createSelector(\n\t[selectShop],\n\tshop => shop.collections\n);\n//\nexport const selectCollectionsForPreview = createSelector(\n\t[selectCollections],\n\tcollections =>\n\t\tcollections ? Object.keys(collections).map(key => collections[key]) : []\n);\n//\nexport const selectCollection = memoize(collectionUrlParam =>\n\tcreateSelector([selectCollections], collections =>\n\t\tcollections ? collections[collectionUrlParam] : null\n\t)\n);\n//\nexport const selectIsCollectionFetching = createSelector(\n\t[selectShop],\n\tshop => shop.isFetching\n);\n//\nexport const selectIsCollectionsLoaded = createSelector(\n\t[selectShop],\n\tshop => !!shop.collections\n);\n"]},"metadata":{},"sourceType":"module"}