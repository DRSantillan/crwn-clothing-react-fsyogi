{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utilities';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, regi } from './user.actions'; //\n\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n} //\n\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n} //\n\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n} //\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n} //\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n} //\n\nexport function* registration(_ref2) {\n  let {\n    payload: {\n      email,\n      password,\n      displayName\n    }\n  } = _ref2;\n\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n  } catch (error) {}\n} //\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n} //\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n} //\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n} //\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onRegistrationStart() {\n  yield takeLatest(UserActionTypes.REGISTRATION_START, registration);\n} //\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","regi","getSnapShotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","registration","displayName","createUserWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onRegistrationStart","REGISTRATION_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACCC,IADD,EAECC,cAFD,EAGCC,yBAHD,EAICC,cAJD,QAKO,mCALP;AAOA,SACCC,aADD,EAECC,aAFD,EAGCC,cAHD,EAICC,cAJD,EAKCC,IALD,QAMO,gBANP,C,CAOA;;AACA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAClD,MAAI;AACH,UAAMC,OAAO,GAAG,MAAMb,IAAI,CAACI,yBAAD,EAA4BQ,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CACRQ,aAAa,CAAC;AAAEU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADL,CAAT;AAGA,GAND,CAME,OAAOC,KAAP,EAAc;AACf,UAAMpB,GAAG,CAACS,aAAa,CAACW,KAAD,CAAd,CAAT;AACA;AACD,C,CACD;;AACA,OAAO,UAAUC,gBAAV,GAA6B;AACnC,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMlB,IAAI,CAACmB,eAAL,CAAqBlB,cAArB,CAAvB;AACA,UAAMQ,uBAAuB,CAACS,IAAD,CAA7B;AACA,GAHD,CAGE,OAAOF,KAAP,EAAc;AACf,UAAMpB,GAAG,CAACS,aAAa,CAACW,KAAD,CAAd,CAAT;AACA;AACD,C,CACD;;AACA,OAAO,UAAUI,eAAV,OAA4D;AAAA,MAAlC;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAX,GAAkC;;AAClE,MAAI;AACH,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMlB,IAAI,CAACwB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMd,uBAAuB,CAACS,IAAD,CAA7B;AACA,GAHD,CAGE,OAAOF,KAAP,EAAc;AACf,UAAMpB,GAAG,CAACS,aAAa,CAACW,KAAD,CAAd,CAAT;AACA;AACD,C,CACD;;AACA,OAAO,UAAUS,mBAAV,GAAgC;AACtC,MAAI;AACH,UAAMf,QAAQ,GAAG,MAAMP,cAAc,EAArC;AACA,QAAI,CAACO,QAAL,EAAe;AACf,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AACA,GAJD,CAIE,OAAOM,KAAP,EAAc;AACf,UAAMpB,GAAG,CAACS,aAAa,CAACW,KAAD,CAAd,CAAT;AACA;AACD,C,CACD;;AACA,OAAO,UAAUU,OAAV,GAAoB;AAC1B,MAAI;AACH,UAAM1B,IAAI,CAAC0B,OAAL,EAAN;AACA,UAAM9B,GAAG,CAACU,cAAc,EAAf,CAAT;AACA,GAHD,CAGE,OAAOU,KAAP,EAAc;AACf,UAAMpB,GAAG,CAACW,cAAc,CAACS,KAAD,CAAf,CAAT;AACA;AACD,C,CAED;;AACA,OAAO,UAAUW,YAAV,QAAsE;AAAA,MAA/C;AAAEN,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBK,MAAAA;AAAnB;AAAX,GAA+C;;AAC5E,MAAI;AACH,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAMlB,IAAI,CAAC6B,8BAAL,CACtBP,KADsB,EAEtBC,QAFsB,CAAvB;AAIA,GALD,CAKE,OAAOP,KAAP,EAAc,CAAE;AAClB,C,CACD;;AACA,OAAO,UAAUc,mBAAV,GAAgC;AACtC,QAAMnC,UAAU,CAACI,eAAe,CAACgC,oBAAjB,EAAuCd,gBAAvC,CAAhB;AACA,C,CACD;;AACA,OAAO,UAAUe,kBAAV,GAA+B;AACrC,QAAMrC,UAAU,CAACI,eAAe,CAACkC,mBAAjB,EAAsCb,eAAtC,CAAhB;AACA,C,CACD;;AACA,OAAO,UAAUc,kBAAV,GAA+B;AACrC,QAAMvC,UAAU,CAACI,eAAe,CAACoC,kBAAjB,EAAqCV,mBAArC,CAAhB;AACA,C,CACD;;AACA,OAAO,UAAUW,cAAV,GAA2B;AACjC,QAAMzC,UAAU,CAACI,eAAe,CAACsC,cAAjB,EAAiCX,OAAjC,CAAhB;AACA;AAED,OAAO,UAAUY,mBAAV,GAAgC;AACtC,QAAM3C,UAAU,CAACI,eAAe,CAACwC,kBAAjB,EAAqCZ,YAArC,CAAhB;AACA,C,CACD;;AACA,OAAO,UAAUa,SAAV,GAAsB;AAC5B,QAAM3C,GAAG,CAAC,CACTC,IAAI,CAACgC,mBAAD,CADK,EAEThC,IAAI,CAACkC,kBAAD,CAFK,EAGTlC,IAAI,CAACoC,kBAAD,CAHK,EAITpC,IAAI,CAACsC,cAAD,CAJK,CAAD,CAAT;AAMA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport {\n\tauth,\n\tgoogleProvider,\n\tcreateUserProfileDocument,\n\tgetCurrentUser,\n} from '../../firebase/firebase.utilities';\n\nimport {\n\tsignInSuccess,\n\tsignInFailure,\n\tsignOutSuccess,\n\tsignOutFailure,\n\tregi\n} from './user.actions';\n//\nexport function* getSnapShotFromUserAuth(userAuth) {\n\ttry {\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\n\t\tconst userSnapShot = yield userRef.get();\n\t\tyield put(\n\t\t\tsignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() })\n\t\t);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n//\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapShotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n//\nexport function* signInWithEmail({ payload: { email, password } }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tyield getSnapShotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n//\nexport function* isUserAuthenticated() {\n\ttry {\n\t\tconst userAuth = yield getCurrentUser();\n\t\tif (!userAuth) return;\n\t\tyield getSnapShotFromUserAuth(userAuth);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n//\nexport function* signOut() {\n\ttry {\n\t\tyield auth.signOut();\n\t\tyield put(signOutSuccess());\n\t} catch (error) {\n\t\tyield put(signOutFailure(error));\n\t}\n}\n\n//\nexport function* registration({ payload: { email, password, displayName } }) {\n\ttry {\n\t\tconst { user } = yield auth.createUserWithEmailAndPassword(\n\t\t\temail,\n\t\t\tpassword\n\t\t);\n\t} catch (error) {}\n}\n//\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n//\nexport function* onEmailSignInStart() {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n//\nexport function* onCheckUserSession() {\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n//\nexport function* onSignOutStart() {\n\tyield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onRegistrationStart() {\n\tyield takeLatest(UserActionTypes.REGISTRATION_START, registration);\n}\n//\nexport function* userSagas() {\n\tyield all([\n\t\tcall(onGoogleSignInStart),\n\t\tcall(onEmailSignInStart),\n\t\tcall(onCheckUserSession),\n\t\tcall(onSignOutStart),\n\t]);\n}\n"]},"metadata":{},"sourceType":"module"}