{"ast":null,"code":"var _jsxFileName = \"/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/components/user-authentication/UserAuthentication.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput.component';\nimport CustomButton from '../custom-button/CustomButton.component'; // import { auth, signInWithGoogle } from '../../firebase/firebase.utilities'\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './UserAuthentication.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserAuthentication = _ref => {\n  _s();\n\n  let {\n    emailSignInStart,\n    googleSignInStart\n  } = _ref;\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  }); //\n\n  const {\n    email,\n    password\n  } = userCredentials; // handles the when a user logs in to site\n\n  const handleSubmitButtonEvent = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  }; // handles changes in forms its linked to\n\n\n  const handleChangeEvent = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitButtonEvent,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        handleChange: handleChangeEvent,\n        label: \"Email:\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        handleChange: handleChangeEvent,\n        value: password,\n        label: \"Password:\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign In with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UserAuthentication, \"Z94aA48HF4A1047nIE4fu7buXZ4=\");\n\n_c = UserAuthentication;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(UserAuthentication);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAuthentication\");","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/components/user-authentication/UserAuthentication.component.jsx"],"names":["React","Component","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","UserAuthentication","userCredentials","setCredentials","email","password","handleSubmitButtonEvent","event","preventDefault","handleChangeEvent","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput.component';\nimport CustomButton from '../custom-button/CustomButton.component';\n// import { auth, signInWithGoogle } from '../../firebase/firebase.utilities'\nimport {\n\tgoogleSignInStart,\n\temailSignInStart,\n} from '../../redux/user/user.actions';\nimport './UserAuthentication.styles.scss';\n\nconst UserAuthentication = ({ emailSignInStart, googleSignInStart }) => {\n\tconst [userCredentials, setCredentials] = useState({\n\t\temail: '',\n\t\tpassword: '',\n\t});\n\t//\n\tconst { email, password } = userCredentials;\n\t// handles the when a user logs in to site\n\tconst handleSubmitButtonEvent = async event => {\n\t\tevent.preventDefault();\n\n\t\t\n\t\temailSignInStart(email, password);\n\t};\n\t// handles changes in forms its linked to\n\tconst handleChangeEvent = event => {\n\t\tconst { value, name } = event.target;\n\n\t\tsetCredentials({ ...userCredentials, [name]: value });\n\t};\n\n\t\n\treturn (\n\t\t<div className='sign-in'>\n\t\t\t<h2>I already have an account.</h2>\n\t\t\t<span>Sign in with your email and password.</span>\n\n\t\t\t<form onSubmit={handleSubmitButtonEvent}>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype='email'\n\t\t\t\t\tname='email'\n\t\t\t\t\tvalue={email}\n\t\t\t\t\thandleChange={handleChangeEvent}\n\t\t\t\t\tlabel='Email:'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\n\t\t\t\t<FormInput\n\t\t\t\t\ttype='password'\n\t\t\t\t\tname='password'\n\t\t\t\t\thandleChange={handleChangeEvent}\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tlabel='Password:'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<div className='buttons'>\n\t\t\t\t\t<CustomButton type='submit'>Sign In</CustomButton>\n\t\t\t\t\t<CustomButton\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tonClick={googleSignInStart}\n\t\t\t\t\t\tisGoogleSignIn\n\t\t\t\t\t>\n\t\t\t\t\t\tSign In with Google\n\t\t\t\t\t</CustomButton>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) =>\n\t\tdispatch(emailSignInStart({ email, password })),\n});\nexport default connect(null, mapDispatchToProps)(UserAuthentication);\n"]},"metadata":{},"sourceType":"module"}