{"ast":null,"code":"var _jsxFileName = \"/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/components/new-user-registration/NewUserRegistration.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput.component';\nimport CustomButton from '../custom-button/CustomButton.component';\nimport { registrationStart } from '../../redux/user/user.actions';\nimport './NewUserRegistration.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewUserRegistration = _ref => {\n  _s();\n\n  let {\n    registrationStart\n  } = _ref;\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleFormInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const handleFormSubmission = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match!\");\n      return;\n    }\n\n    registrationStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I do not have an account.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleFormSubmission,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleFormInputChange,\n        label: \"Display Name:\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleFormInputChange,\n        label: \"Email Address:\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleFormInputChange,\n        label: \"Password:\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleFormInputChange,\n        label: \"Confirm Password:\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n\n_s(NewUserRegistration, \"/SKfFUNCLMi3kJErTTbHT6P9TD0=\");\n\n_c = NewUserRegistration;\n\nconst mapDispatchToProps = dispatch => ({\n  registrationStart: userCredentials => dispatch(registrationStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(NewUserRegistration);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewUserRegistration\");","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/components/new-user-registration/NewUserRegistration.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","registrationStart","NewUserRegistration","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleFormInputChange","event","name","value","target","setState","handleFormSubmission","preventDefault","alert","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/FormInput.component';\nimport CustomButton from '../custom-button/CustomButton.component';\n\nimport { registrationStart } from '../../redux/user/user.actions';\n\nimport './NewUserRegistration.styles.scss';\n\nconst NewUserRegistration = ({ registrationStart }) => {\n\tconst [userCredentials, setUserCredentials] = useState({\n\t\tdisplayName: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\tconfirmPassword: '',\n\t});\n\tconst { displayName, email, password, confirmPassword } = userCredentials;\n\tconst handleFormInputChange = event => {\n\t\tconst { name, value } = event.target;\n\n\t\tthis.setState({ [name]: value });\n\t};\n\n\tconst handleFormSubmission = async event => {\n\t\tevent.preventDefault();\n\t\t\n\n\t\tif (password !== confirmPassword) {\n\t\t\talert(\"passwords don't match!\");\n\t\t\treturn;\n\t\t}\n\n\t\tregistrationStart({ displayName, email, password });\n\t};\n\n\t\n\treturn (\n\t\t<div className='sign-up'>\n\t\t\t<h2 className='title'>I do not have an account.</h2>\n\t\t\t<span>Sign up with your email and password.</span>\n\t\t\t<form className='sign-up-form' onSubmit={handleFormSubmission}>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='displayName'\n\t\t\t\t\tvalue={displayName}\n\t\t\t\t\tonChange={handleFormInputChange}\n\t\t\t\t\tlabel='Display Name:'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype='email'\n\t\t\t\t\tname='email'\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={handleFormInputChange}\n\t\t\t\t\tlabel='Email Address:'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype='password'\n\t\t\t\t\tname='password'\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={handleFormInputChange}\n\t\t\t\t\tlabel='Password:'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype='password'\n\t\t\t\t\tname='confirmPassword'\n\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\tonChange={handleFormInputChange}\n\t\t\t\t\tlabel='Confirm Password:'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<CustomButton type='submit'>Sign Up</CustomButton>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nconst mapDispatchToProps = dispatch => ({\n\tregistrationStart: userCredentials =>\n\t\tdispatch(registrationStart(userCredentials)),\n});\n\nexport default connect(null, mapDispatchToProps)(NewUserRegistration);\n"]},"metadata":{},"sourceType":"module"}