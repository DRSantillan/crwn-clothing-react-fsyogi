{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utilities';\nimport { SignInSuccess, SignInFailure } from './user.actions';\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n    console.log(userRef);\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n    console.log(userRef);\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","SignInSuccess","SignInFailure","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithGoogle","onEmailSignInStart","EMAIL_SIGN_IN_START","signInWithEmail","user","signInWithPopup","userRef","userSnapShot","get","googleSignInSuccess","id","data","console","log","error","googleSignInFailure","payload","email","password","signInWithEmailAndPassword","emailSignInSuccess","emailSignInFailure","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACCC,IADD,EAECC,cAFD,EAGCC,yBAHD,QAIO,mCAJP;AAKA,SACCC,aADD,EAECC,aAFD,QAIO,gBAJP;AAMA,OAAO,UAAUC,mBAAV,GAAgC;AACtC,QAAMV,UAAU,CAACI,eAAe,CAACO,oBAAjB,EAAuCC,gBAAvC,CAAhB;AACA;AACD,OAAO,UAAUC,kBAAV,GAA+B;AACrC,QAAMb,UAAU,CAACI,eAAe,CAACU,mBAAjB,EAAsCC,eAAtC,CAAhB;AACA;AACD,OAAO,UAAUH,gBAAV,GAA6B;AACnC,MAAI;AACH,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMX,IAAI,CAACY,eAAL,CAAqBX,cAArB,CAAvB;AACA,UAAMY,OAAO,GAAG,MAAMf,IAAI,CAACI,yBAAD,EAA4BS,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMnB,GAAG,CACRoB,mBAAmB,CAAC;AAAEC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAuB,SAAGH,YAAY,CAACI,IAAb;AAA1B,KAAD,CADX,CAAT;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACA,GARD,CAQE,OAAOQ,KAAP,EAAc;AACf,UAAMzB,GAAG,CAAC0B,mBAAmB,CAACD,KAAD,CAApB,CAAT;AACA;AACD;AAED,OAAO,UAAUX,eAAV,OAA4D;AAAA,MAAlC;AAAEa,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAX,GAAkC;;AAClE,MAAI;AACH,UAAM;AAAEd,MAAAA;AAAF,QAAW,MAAMX,IAAI,CAAC0B,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACM,UAAMZ,OAAO,GAAG,MAAMf,IAAI,CAACI,yBAAD,EAA4BS,IAA5B,CAA1B;AACN,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMnB,GAAG,CACR+B,kBAAkB,CAAC;AAAEV,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAuB,SAAGH,YAAY,CAACI,IAAb;AAA1B,KAAD,CADV,CAAT;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACA,GARD,CAQE,OAAOQ,KAAP,EAAc;AACf,UAAMzB,GAAG,CAACgC,kBAAkB,CAACP,KAAD,CAAnB,CAAT;AACA;AACD;AAED,OAAO,UAAUQ,SAAV,GAAsB;AAC5B,QAAMhC,GAAG,CAAC,CAACC,IAAI,CAACO,mBAAD,CAAL,EAA4BP,IAAI,CAACU,kBAAD,CAAhC,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport {\n\tauth,\n\tgoogleProvider,\n\tcreateUserProfileDocument,\n} from '../../firebase/firebase.utilities';\nimport {\n\tSignInSuccess,\n\tSignInFailure,\n\t\n} from './user.actions';\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tconst userRef = yield call(createUserProfileDocument, user);\n\t\tconst userSnapShot = yield userRef.get();\n\t\tyield put(\n\t\t\tgoogleSignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() })\n\t\t);\n\t\tconsole.log(userRef);\n\t} catch (error) {\n\t\tyield put(googleSignInFailure(error));\n\t}\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n        const userRef = yield call(createUserProfileDocument, user);\n\t\tconst userSnapShot = yield userRef.get();\n\t\tyield put(\n\t\t\temailSignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() })\n\t\t);\n\t\tconsole.log(userRef);\n\t} catch (error) {\n\t\tyield put(emailSignInFailure(error));\n\t}\n}\n\nexport function* userSagas() {\n\tyield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}