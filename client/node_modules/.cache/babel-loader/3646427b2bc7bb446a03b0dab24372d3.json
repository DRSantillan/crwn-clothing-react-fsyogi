{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utilities';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)], call(isUserAuthenticated));\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n  } catch (error) {}\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithGoogle","onEmailSignInStart","EMAIL_SIGN_IN_START","signInWithEmail","user","signInWithPopup","getSnapShotFromUserAuth","error","payload","email","password","signInWithEmailAndPassword","userAuth","userRef","userSnapShot","get","id","data","userSagas","isUserAuthenticated","signOut","onSignOutStart","SIGN_OUT_START","onCheckUserSession","CHECK_USER_SESSION"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport {\n\tauth,\n\tgoogleProvider,\n\tcreateUserProfileDocument,\n\tgetCurrentUser,\n} from '../../firebase/firebase.utilities';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapShotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\nexport function* signInWithEmail({ payload: { email, password } }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tyield getSnapShotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\nexport function* getSnapShotFromUserAuth(userAuth) {\n\ttry {\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\n\t\tconst userSnapShot = yield userRef.get();\n\t\tyield put(\n\t\t\tsignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() })\n\t\t);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\nexport function* userSagas() {\n\tyield all([call(onGoogleSignInStart), call(onEmailSignInStart)], call(isUserAuthenticated));\n}\nexport function* isUserAuthenticated() {\n\ttry {\n\t\tconst userAuth = yield getCurrentUser();\n\t\tif (!userAuth) return;\n        yield getSnapShotFromUserAuth(userAuth)\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\nexport function* signOut() {\n    try{\n        yield auth.signOut()\n    }catch(error){\n\n    }\n}\nexport function* onSignOutStart () {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START)\n}\nexport function* onCheckUserSession() {\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n"]},"metadata":{},"sourceType":"module"}