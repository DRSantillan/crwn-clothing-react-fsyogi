{"ast":null,"code":"var _jsxFileName = \"/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/pages/shop/ShopPage.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport './ShopPage.styles.scss';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview.component';\nimport CollectionsOverviewContainer from '../../components/collections-overview/CollectionsOverview.container';\nimport CollectionsPage from '../collections/CollectionsPage.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport Spinner from '../../components/spinner/Spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionPageSpinner = Spinner(CollectionsPage);\n_c = CollectionPageSpinner;\n\nclass ShopPage extends Component {\n  constructor() {\n    super(...arguments);\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverviewC\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionsPage,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageSpinner, {\n          isLoading: !isCollectionLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionPageSpinner\");","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/pages/shop/ShopPage.component.jsx"],"names":["React","Component","Route","connect","CollectionsOverview","CollectionsOverviewContainer","CollectionsPage","fetchCollectionsStartAsync","Spinner","createStructuredSelector","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionPageSpinner","ShopPage","unsubscribeFromSnapShot","componentDidMount","props","render","match","isCollectionLoaded","path","CollectionsOverviewC","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAO,wBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,qEAAhC;AACA,OAAOC,4BAAP,MAAyC,qEAAzC;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,OAAOC,OAAP,MAAoB,4CAApB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAASC,0BAAT,EAAqCC,yBAArC,QAAsE,iCAAtE;;AAGA,MAAMC,qBAAqB,GAAGJ,OAAO,CAACF,eAAD,CAArC;KAAMM,qB;;AACN,MAAMC,QAAN,SAAuBZ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAChCa,uBADgC,GACN,IADM;AAAA;;AAGhCC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAER,MAAAA;AAAF,QAAiC,KAAKS,KAA5C;AACAT,IAAAA,0BAA0B;AAC1B;;AAEDU,EAAAA,MAAM,GAAE;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAgC,KAAKH,KAA3C;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACC,QAAC,KAAD;AACC,QAAA,KAAK,MADN;AAEC,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFrB;AAGC,QAAA,SAAS,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA,cADD,eAOC,QAAC,KAAD;AACC,QAAA,IAAI,EAAG,GAAEH,KAAK,CAACE,IAAK,gBADrB;AAEC,QAAA,SAAS,EAAEd,eAFZ;AAGC,QAAA,MAAM,EAAEU,KAAK,iBACZ,QAAC,qBAAD;AACC,UAAA,SAAS,EAAE,CAACG,kBADb;AAAA,aAEKH;AAFL;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAPD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAoBA;;AA9B+B;;AAgChC;AACD,MAAMM,eAAe,GAAGb,wBAAwB,CAAC;AAChDc,EAAAA,oBAAoB,EAAEb,0BAD0B;AAEhDS,EAAAA,kBAAkB,EAAER;AAF4B,CAAD,CAAhD;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACvClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAClB,0BAA0B,EAA3B;AADH,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Route } from 'react-router-dom';\nimport './ShopPage.styles.scss';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview.component'\nimport CollectionsOverviewContainer from '../../components/collections-overview/CollectionsOverview.container'\nimport CollectionsPage from '../collections/CollectionsPage.component'\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport Spinner from '../../components/spinner/Spinner.component';\nimport {createStructuredSelector} from 'reselect'\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n\n\nconst CollectionPageSpinner = Spinner(CollectionsPage);\nclass ShopPage extends Component {\n\tunsubscribeFromSnapShot = null;\n\n\tcomponentDidMount() {\n\t\tconst { fetchCollectionsStartAsync } = this.props;\n\t\tfetchCollectionsStartAsync();\n\t}\n\n\trender(){\n\t\tconst { match, isCollectionLoaded } = this.props;\n\t\treturn (\n\t\t\t<div className='shop-page'>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={`${match.path}`}\n\t\t\t\t\tcomponent={CollectionsOverviewC}\n\t\t\t\t\t\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\t\tcomponent={CollectionsPage}\n\t\t\t\t\trender={props => (\n\t\t\t\t\t\t<CollectionPageSpinner\n\t\t\t\t\t\t\tisLoading={!isCollectionLoaded}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\t\n};\nconst mapStateToProps = createStructuredSelector({\n\tisCollectionFetching: selectIsCollectionFetching,\n\tisCollectionLoaded: selectIsCollectionsLoaded\n})\nconst mapDispatchToProps = dispatch => ({\n\tfetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}