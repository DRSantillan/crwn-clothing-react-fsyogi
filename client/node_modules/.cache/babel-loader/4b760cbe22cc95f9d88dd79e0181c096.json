{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utilities';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(Us);\n}","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithGoogle","onEmailSignInStart","EMAIL_SIGN_IN_START","signInWithEmail","user","signInWithPopup","getSnapShotFromUserAuth","error","payload","email","password","signInWithEmailAndPassword","userAuth","userRef","userSnapShot","get","id","data","userSagas","onCheckUserSession","Us"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACCC,IADD,EAECC,cAFD,EAGCC,yBAHD,QAIO,mCAJP;AAKA,SACCC,aADD,EAECC,aAFD,QAIO,gBAJP;AAKA,OAAO,UAAUC,mBAAV,GAAgC;AACtC,QAAMV,UAAU,CAACI,eAAe,CAACO,oBAAjB,EAAuCC,gBAAvC,CAAhB;AACA;AACD,OAAO,UAAUC,kBAAV,GAA+B;AACrC,QAAMb,UAAU,CAACI,eAAe,CAACU,mBAAjB,EAAsCC,eAAtC,CAAhB;AACA;AACD,OAAO,UAAUH,gBAAV,GAA6B;AACnC,MAAI;AACH,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMX,IAAI,CAACY,eAAL,CAAqBX,cAArB,CAAvB;AACA,UAAMY,uBAAuB,CAACF,IAAD,CAA7B;AAEA,GAJD,CAIE,OAAOG,KAAP,EAAc;AACf,UAAMlB,GAAG,CAACQ,aAAa,CAACU,KAAD,CAAd,CAAT;AACA;AACD;AACD,OAAO,UAAUJ,eAAV,OAA4D;AAAA,MAAlC;AAAEK,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAX,GAAkC;;AAClE,MAAI;AACH,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMX,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACK,UAAMJ,uBAAuB,CAACF,IAAD,CAA7B;AACL,GAHD,CAGE,OAAOG,KAAP,EAAc;AACf,UAAMlB,GAAG,CAACQ,aAAa,CAACU,KAAD,CAAd,CAAT;AACA;AACD;AACD,OAAO,UAAUD,uBAAV,CAAkCM,QAAlC,EAA4C;AAC/C,MAAI;AAEA,UAAMC,OAAO,GAAG,MAAMtB,IAAI,CAACI,yBAAD,EAA4BiB,QAA5B,CAA1B;AACN,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAM1B,GAAG,CACRO,aAAa,CAAC;AAAEoB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADL,CAAT;AAGA,GAPE,CAOD,OAAOV,KAAP,EAAc;AACf,UAAMlB,GAAG,CAACQ,aAAa,CAACU,KAAD,CAAd,CAAT;AACA;AACD;AACD,OAAO,UAAUW,SAAV,GAAsB;AAC5B,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACO,mBAAD,CAAL,EAA4BP,IAAI,CAACU,kBAAD,CAAhC,CAAD,CAAT;AACA;AAED,OAAO,UAAUkB,kBAAV,GAA+B;AAClC,QAAM/B,UAAU,CAACgC,EAAD,CAAhB;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport {\n\tauth,\n\tgoogleProvider,\n\tcreateUserProfileDocument,\n} from '../../firebase/firebase.utilities';\nimport {\n\tsignInSuccess,\n\tsignInFailure,\n\t\n} from './user.actions';\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapShotFromUserAuth(user)\n\t\t\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\nexport function* signInWithEmail({ payload: { email, password } }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n       yield getSnapShotFromUserAuth(user)\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\nexport function* getSnapShotFromUserAuth(userAuth) {\n    try {\n\t\t\n        const userRef = yield call(createUserProfileDocument, userAuth);\n\t\tconst userSnapShot = yield userRef.get();\n\t\tyield put(\n\t\t\tsignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() })\n\t\t);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\nexport function* userSagas() {\n\tyield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(Us)\n}\n"]},"metadata":{},"sourceType":"module"}