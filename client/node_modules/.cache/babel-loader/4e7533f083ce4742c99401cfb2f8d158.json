{"ast":null,"code":"var _jsxFileName = \"/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/components/spinner/Spinner.component.jsx\";\nimport { SpinnerContainer, SpinnerOverlay } from './Spinner.styled.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Spinner = WrappedComponent => {\n  const Spinner = _ref => {\n    let {\n      isLoading,\n      ...otherProps\n    } = _ref;\n    return isLoading ? /*#__PURE__*/_jsxDEV(SpinnerOverlay, {\n      children: /*#__PURE__*/_jsxDEV(SpinnerContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(WrappedComponent, { ...otherProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this);\n  };\n};\n\n_c = Spinner;\nexport default Spinner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spinner\");","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/components/spinner/Spinner.component.jsx"],"names":["SpinnerContainer","SpinnerOverlay","Spinner","WrappedComponent","isLoading","otherProps"],"mappings":";AAAA,SAASA,gBAAT,EAA2BC,cAA3B,QAAiD,4BAAjD;;;AAEA,MAAMC,OAAO,GAAGC,gBAAgB,IAAI;AACnC,QAAMD,OAAO,GAAG,QAAkC;AAAA,QAAjC;AAAEE,MAAAA,SAAF;AAAa,SAAGC;AAAhB,KAAiC;AACjD,WAAOD,SAAS,gBACf,QAAC,cAAD;AAAA,6BACC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADe,gBAKf,QAAC,gBAAD,OAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA,YALD;AAOA,GARD;AAUA,CAXD;;KAAMH,O;AAaN,eAAeA,OAAf","sourcesContent":["import { SpinnerContainer, SpinnerOverlay } from './Spinner.styled.component';\n\nconst Spinner = WrappedComponent => {\n\tconst Spinner = ({ isLoading, ...otherProps }) => {\n\t\treturn isLoading ? (\n\t\t\t<SpinnerOverlay>\n\t\t\t\t<SpinnerContainer />\n\t\t\t</SpinnerOverlay>\n\t\t) : (\n\t\t\t<WrappedComponent {...otherProps} />\n\t\t);\n\t};\n\t\n};\n\nexport default Spinner;\n"]},"metadata":{},"sourceType":"module"}