{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utilities';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)], call(isUserAuthenticated), call(onSignOutStart));\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithGoogle","onEmailSignInStart","EMAIL_SIGN_IN_START","signInWithEmail","user","signInWithPopup","getSnapShotFromUserAuth","error","payload","email","password","signInWithEmailAndPassword","userAuth","userRef","userSnapShot","get","id","data","userSagas","isUserAuthenticated","onSignOutStart","signOut","SIGN_OUT_START","onCheckUserSession","CHECK_USER_SESSION"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport {\n\tauth,\n\tgoogleProvider,\n\tcreateUserProfileDocument,\n\tgetCurrentUser,\n} from '../../firebase/firebase.utilities';\nimport {\n\tsignInSuccess,\n\tsignInFailure,\n\tsignOutSuccess,\n\tsignOutFailure,\n} from './user.actions';\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapShotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\nexport function* signInWithEmail({ payload: { email, password } }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tyield getSnapShotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\nexport function* getSnapShotFromUserAuth(userAuth) {\n\ttry {\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\n\t\tconst userSnapShot = yield userRef.get();\n\t\tyield put(\n\t\t\tsignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() })\n\t\t);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\nexport function* userSagas() {\n\tyield all(\n\t\t[call(onGoogleSignInStart), call(onEmailSignInStart)],\n\t\tcall(isUserAuthenticated), call(onSignOutStart)\n\t);\n}\nexport function* isUserAuthenticated() {\n\ttry {\n\t\tconst userAuth = yield getCurrentUser();\n\t\tif (!userAuth) return;\n\t\tyield getSnapShotFromUserAuth(userAuth);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\nexport function* signOut() {\n\ttry {\n\t\tyield auth.signOut();\n\t\tyield put(signOutSuccess());\n\t} catch (error) {\n\t\tyield put(signOutFailure(error));\n\t}\n}\nexport function* onSignOutStart() {\n\tyield takeLatest(UserActionTypes.SIGN_OUT_START);\n}\nexport function* onCheckUserSession() {\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n"]},"metadata":{},"sourceType":"module"}