{"ast":null,"code":"import { takeEvery, all, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapShotMap } from '../../firebase/firebase.utilities';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapShotMap, snapShot);\n    console.log(collectionsMap);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsAsync), call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/client/src/redux/shop/shop.sagas.js"],"names":["takeEvery","all","call","put","ShopActionTypes","firestore","convertCollectionsSnapShotMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapShot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,GAA/B,QAA0C,oBAA1C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACCC,SADD,EAECC,6BAFD,QAGO,mCAHP;AAIA,SACCC,uBADD,EAECC,uBAFD,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACH,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACI,6BAAD,EAAgCQ,QAAhC,CAAjC;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYK,cAAZ;AACA,UAAMb,GAAG,CAACI,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AAEA,GAPD,CAOE,OAAOC,KAAP,EAAc;AAEf,UAAMd,GAAG,CAACK,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMnB,SAAS,CACdI,eAAe,CAACgB,uBADF,EAEdX,qBAFc,CAAf;AAIA;AAGD,OAAO,UAAUY,SAAV,GAAsB;AAC5B,QAAMpB,GAAG,CAAC,CAACC,IAAI,CAACO,qBAAD,CAAL,EAA8BP,IAAI,CAACiB,qBAAD,CAAlC,CAAD,CAAT;AACA","sourcesContent":["import { takeEvery, all, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport {\n\tfirestore,\n\tconvertCollectionsSnapShotMap,\n} from '../../firebase/firebase.utilities';\nimport {\n\tfetchCollectionsSuccess,\n\tfetchCollectionsFailure,\n} from './shop.actions';\n\nexport function* fetchCollectionsAsync() {\n\tyield console.log('I am fired');\n\n\ttry {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tconst snapShot = yield collectionRef.get();\n\t\tconst collectionsMap = yield call(convertCollectionsSnapShotMap, snapShot);\n\t\tconsole.log(collectionsMap)\n\t\tyield put(fetchCollectionsSuccess(collectionsMap))\n\n\t} catch (error) {\n\n\t\tyield put(fetchCollectionsFailure(error.message))\n\t}\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeEvery(\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,\n\t\tfetchCollectionsAsync\n\t);\n}\n\n\nexport function* shopSagas() {\n\tyield all([call(fetchCollectionsAsync), call(fetchCollectionsStart)])\n}"]},"metadata":{},"sourceType":"module"}