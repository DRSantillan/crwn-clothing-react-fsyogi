{"ast":null,"code":"var _jsxFileName = \"/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/components/user-authentication/UserAuthentication.component.jsx\";\nimport React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput.component';\nimport CustomButton from '../custom-button/CustomButton.component'; // import { auth, signInWithGoogle } from '../../firebase/firebase.utilities'\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './UserAuthentication.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserAuthentication = () => {\n  // handles the when a user logs in to site\n  handleSubmitButtonEvent = async event => {\n    event.preventDefault();\n    const {\n      emailSignInStart\n    } = this.props;\n    const {\n      email,\n      password\n    } = this.state;\n    emailSignInStart(email, password);\n  }; // handles changes in forms its linked to\n\n\n  handleChangeEvent = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    googleSignInStart\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmitButtonEvent,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: this.state.email,\n        handleChange: this.handleChangeEvent,\n        label: \"Email:\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        handleChange: this.handleChangeEvent,\n        value: this.state.password,\n        label: \"Password:\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign In with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 4\n  }, this);\n};\n\n_c = UserAuthentication;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(UserAuthentication);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAuthentication\");","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/components/user-authentication/UserAuthentication.component.jsx"],"names":["React","Component","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","UserAuthentication","handleSubmitButtonEvent","event","preventDefault","props","email","password","state","handleChangeEvent","value","name","target","setState","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,YAAP,MAAyB,yCAAzB,C,CACA;;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,+BAApD;AACA,OAAO,kCAAP;;;AAEA,MAAMC,kBAAkB,GAAE,MAAK;AAE9B;AACAC,EAAAA,uBAAuB,GAAG,MAAMC,KAAN,IAAe;AACxCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAACJ,MAAAA;AAAD,QAAqB,KAAKK,KAAhC;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKC,KAAjC;AACAR,IAAAA,gBAAgB,CAACM,KAAD,EAAQC,QAAR,CAAhB;AAEA,GAND,CAH8B,CAU9B;;;AACAE,EAAAA,iBAAiB,GAAGN,KAAK,IAAI;AAC5B,UAAM;AAAEO,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBR,KAAK,CAACS,MAA9B;AAEA,SAAKC,QAAL,CAAc;AACb,OAACF,IAAD,GAAQD;AADK,KAAd;AAGA,GAND;;AASC,QAAM;AAACX,IAAAA;AAAD,MAAsB,KAAKM,KAAjC;AACA,sBACC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC;AAAM,MAAA,QAAQ,EAAE,KAAKH,uBAArB;AAAA,8BACC,QAAC,SAAD;AACC,QAAA,IAAI,EAAC,OADN;AAEC,QAAA,IAAI,EAAC,OAFN;AAGC,QAAA,KAAK,EAAE,KAAKM,KAAL,CAAWF,KAHnB;AAIC,QAAA,YAAY,EAAE,KAAKG,iBAJpB;AAKC,QAAA,KAAK,EAAC,QALP;AAMC,QAAA,QAAQ;AANT;AAAA;AAAA;AAAA;AAAA,cADD,eAUC,QAAC,SAAD;AACC,QAAA,IAAI,EAAC,UADN;AAEC,QAAA,IAAI,EAAC,UAFN;AAGC,QAAA,YAAY,EAAE,KAAKA,iBAHpB;AAIC,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,QAJnB;AAKC,QAAA,KAAK,EAAC,WALP;AAMC,QAAA,QAAQ;AANT;AAAA;AAAA;AAAA;AAAA,cAVD,eAkBC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACC,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAER,iBAArC;AAAwD,UAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAiCD,CAtDD;;KAAME,kB;;AAuDN,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACvChB,EAAAA,iBAAiB,EAAE,MAAMgB,QAAQ,CAAChB,iBAAiB,EAAlB,CADM;AAEvCC,EAAAA,gBAAgB,EAAE,CAACM,KAAD,EAAQC,QAAR,KACjBQ,QAAQ,CAACf,gBAAgB,CAAC;AAACM,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CAAjB;AAH8B,CAAL,CAAnC;;AAKA,eAAeX,OAAO,CAAC,IAAD,EAAMkB,kBAAN,CAAP,CAAiCb,kBAAjC,CAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput.component';\nimport CustomButton from '../custom-button/CustomButton.component';\n// import { auth, signInWithGoogle } from '../../firebase/firebase.utilities'\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './UserAuthentication.styles.scss';\n\nconst UserAuthentication =()=> {\n\t\n\t// handles the when a user logs in to site\n\thandleSubmitButtonEvent = async event => {\n\t\tevent.preventDefault();\n\t\tconst {emailSignInStart} = this.props;\n\t\tconst { email, password } = this.state;\n\t\temailSignInStart(email, password)\n\t\t\n\t};\n\t// handles changes in forms its linked to\n\thandleChangeEvent = event => {\n\t\tconst { value, name } = event.target;\n\n\t\tthis.setState({\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\t\n\t\tconst {googleSignInStart} = this.props;\n\t\treturn (\n\t\t\t<div className='sign-in'>\n\t\t\t\t<h2>I already have an account.</h2>\n\t\t\t\t<span>Sign in with your email and password.</span>\n\n\t\t\t\t<form onSubmit={this.handleSubmitButtonEvent}>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\thandleChange={this.handleChangeEvent}\n\t\t\t\t\t\tlabel='Email:'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\thandleChange={this.handleChangeEvent}\n\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\tlabel='Password:'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='buttons'>\n\t\t\t\t\t\t<CustomButton type='submit'>Sign In</CustomButton>\n\t\t\t\t\t\t<CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n\t\t\t\t\t\t\tSign In with Google\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t\n}\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) =>\n\t\tdispatch(emailSignInStart({email, password})),\n});\nexport default connect(null,mapDispatchToProps)(UserAuthentication);\n"]},"metadata":{},"sourceType":"module"}