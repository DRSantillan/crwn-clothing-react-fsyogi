{"ast":null,"code":"var _jsxFileName = \"/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/components/user-authentication/UserAuthentication.component.jsx\";\nimport React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput.component';\nimport CustomButton from '../custom-button/CustomButton.component'; // import { auth, signInWithGoogle } from '../../firebase/firebase.utilities'\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './UserAuthentication.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserAuthentication extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleSubmitButtonEvent = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChangeEvent = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I already have an account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmitButtonEvent,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"email\",\n          name: \"email\",\n          value: this.state.email,\n          handleChange: this.handleChangeEvent,\n          label: \"Email:\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"password\",\n          handleChange: this.handleChangeEvent,\n          value: this.state.password,\n          label: \"Password:\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \"Sign In with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(UserAuthentication);","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/components/user-authentication/UserAuthentication.component.jsx"],"names":["React","Component","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","UserAuthentication","handleSubmitButtonEvent","event","preventDefault","props","email","password","state","handleChangeEvent","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,YAAP,MAAyB,yCAAzB,C,CACA;;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,+BAApD;AACA,OAAO,kCAAP;;;AAEA,MAAMC,kBAAN,SAAiCP,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAG1CQ,uBAH0C,GAGhB,MAAMC,KAAN,IAAe;AACxCA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAACJ,QAAAA;AAAD,UAAqB,KAAKK,KAAhC;AACA,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;AACAR,MAAAA,gBAAgB,CAACM,KAAD,EAAQC,QAAR,CAAhB;AAEA,KATyC;;AAAA,SAW1CE,iBAX0C,GAWtBN,KAAK,IAAI;AAC5B,YAAM;AAAEO,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBR,KAAK,CAACS,MAA9B;AAEA,WAAKC,QAAL,CAAc;AACb,SAACF,IAAD,GAAQD;AADK,OAAd;AAGA,KAjByC;AAAA;;AAmB1CI,EAAAA,MAAM,GAAG;AACR,UAAM;AAACf,MAAAA;AAAD,QAAsB,KAAKM,KAAjC;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAIC;AAAM,QAAA,QAAQ,EAAE,KAAKH,uBAArB;AAAA,gCACC,QAAC,SAAD;AACC,UAAA,IAAI,EAAC,OADN;AAEC,UAAA,IAAI,EAAC,OAFN;AAGC,UAAA,KAAK,EAAE,KAAKM,KAAL,CAAWF,KAHnB;AAIC,UAAA,YAAY,EAAE,KAAKG,iBAJpB;AAKC,UAAA,KAAK,EAAC,QALP;AAMC,UAAA,QAAQ;AANT;AAAA;AAAA;AAAA;AAAA,gBADD,eAUC,QAAC,SAAD;AACC,UAAA,IAAI,EAAC,UADN;AAEC,UAAA,IAAI,EAAC,UAFN;AAGC,UAAA,YAAY,EAAE,KAAKA,iBAHpB;AAIC,UAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,QAJnB;AAKC,UAAA,KAAK,EAAC,WALP;AAMC,UAAA,QAAQ;AANT;AAAA;AAAA;AAAA;AAAA,gBAVD,eAkBC;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACC,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,QAAnB;AAA4B,YAAA,OAAO,EAAER,iBAArC;AAAwD,YAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBD;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAgCA;;AArDyC;;AAuD3C,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACvCjB,EAAAA,iBAAiB,EAAE,MAAMiB,QAAQ,CAACjB,iBAAiB,EAAlB,CADM;AAEvCC,EAAAA,gBAAgB,EAAE,CAACM,KAAD,EAAQC,QAAR,KACjBS,QAAQ,CAAChB,gBAAgB,CAAC;AAACM,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CAAjB;AAH8B,CAAL,CAAnC;;AAKA,eAAeX,OAAO,CAAC,IAAD,EAAMmB,kBAAN,CAAP,CAAiCd,kBAAjC,CAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput.component';\nimport CustomButton from '../custom-button/CustomButton.component';\n// import { auth, signInWithGoogle } from '../../firebase/firebase.utilities'\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './UserAuthentication.styles.scss';\n\nclass UserAuthentication extends Component {\n\t\n\t// handles the when a user logs in to site\n\thandleSubmitButtonEvent = async event => {\n\t\tevent.preventDefault();\n\t\tconst {emailSignInStart} = this.props;\n\t\tconst { email, password } = this.state;\n\t\temailSignInStart(email, password)\n\t\t\n\t};\n\t// handles changes in forms its linked to\n\thandleChangeEvent = event => {\n\t\tconst { value, name } = event.target;\n\n\t\tthis.setState({\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst {googleSignInStart} = this.props;\n\t\treturn (\n\t\t\t<div className='sign-in'>\n\t\t\t\t<h2>I already have an account.</h2>\n\t\t\t\t<span>Sign in with your email and password.</span>\n\n\t\t\t\t<form onSubmit={this.handleSubmitButtonEvent}>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\thandleChange={this.handleChangeEvent}\n\t\t\t\t\t\tlabel='Email:'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\thandleChange={this.handleChangeEvent}\n\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\tlabel='Password:'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='buttons'>\n\t\t\t\t\t\t<CustomButton type='submit'>Sign In</CustomButton>\n\t\t\t\t\t\t<CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n\t\t\t\t\t\t\tSign In with Google\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) =>\n\t\tdispatch(emailSignInStart({email, password})),\n});\nexport default connect(null,mapDispatchToProps)(UserAuthentication);\n"]},"metadata":{},"sourceType":"module"}