{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapShotMap } from '../../firebase/firebase.utilities';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = yield collectionRef.get();\n    const collectionsMap = call(convertCollectionsSnapShotMap, snapShot);\n    console.log(coll);\n  } catch (error) {\n    fetchCollectionsFailure(error.message);\n  } // collectionRef\n  // \t.get()\n  // \t.then(snapShot => {\n  // \t\tconst collectionsMap = convertCollectionsSnapShotMap(snapShot);\n  // \t\tfetchCollectionsSuccess(collectionsMap);\n  // \t})\n  // \t.catch(error => );\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","ShopActionTypes","firestore","convertCollectionsSnapShotMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapShot","get","collectionsMap","coll","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACCC,SADD,EAECC,6BAFD,QAGO,mCAHP;AAIA,SACCC,uBADD,EAECC,uBAFD,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACH,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAGb,IAAI,CAACG,6BAAD,EAAgCQ,QAAhC,CAA3B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACA,GALD,CAKE,OAAOC,KAAP,EAAc;AAEfV,IAAAA,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAvB;AACA,GAXuC,CAaxC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMlB,SAAS,CACdE,eAAe,CAACiB,uBADF,EAEdZ,qBAFc,CAAf;AAIA","sourcesContent":["import { takeEvery, call } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport {\n\tfirestore,\n\tconvertCollectionsSnapShotMap,\n} from '../../firebase/firebase.utilities';\nimport {\n\tfetchCollectionsSuccess,\n\tfetchCollectionsFailure,\n} from './shop.actions';\n\nexport function* fetchCollectionsAsync() {\n\tyield console.log('I am fired');\n\n\ttry {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tconst snapShot = yield collectionRef.get();\n\t\tconst collectionsMap = call(convertCollectionsSnapShotMap, snapShot);\n\t\tconsole.log(coll)\n\t} catch (error) {\n\n\t\tfetchCollectionsFailure(error.message)\n\t}\n\n\t// collectionRef\n\t// \t.get()\n\t// \t.then(snapShot => {\n\t// \t\tconst collectionsMap = convertCollectionsSnapShotMap(snapShot);\n\t// \t\tfetchCollectionsSuccess(collectionsMap);\n\t// \t})\n\t// \t.catch(error => );\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeEvery(\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,\n\t\tfetchCollectionsAsync\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}