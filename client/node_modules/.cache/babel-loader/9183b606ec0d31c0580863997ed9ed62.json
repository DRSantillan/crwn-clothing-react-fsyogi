{"ast":null,"code":"var _jsxFileName = \"/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/components/cart-drowndown/CartDropDown.component.jsx\";\nimport React from 'react';\nimport CustomButton from '../custom-button/CustomButton.component';\nimport CartItem from '../cart-item/CartItem.component';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport './CartDropDown.styles.scss';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartDropDown = _ref => {\n  let {\n    cartItems,\n    history,\n    dispatch\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-items\",\n      children: cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItem, {\n        item: cartItem\n      }, cartItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"empty-message\",\n        children: \"Your cart is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton // onClick={() => {\n    // \thistory.push('/checkout');\n    // \tdispatch(toggleCartHidden());\n    // }}\n    , {\n      children: \"GO TO CHECKOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n\n_c = CartDropDown;\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default CartDropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropDown\");","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/components/cart-drowndown/CartDropDown.component.jsx"],"names":["React","CustomButton","CartItem","connect","withRouter","selectCartItems","createStructuredSelector","toggleCartHidden","CartDropDown","cartItems","history","dispatch","length","map","cartItem","id","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,4BAAP;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;;AAEA,MAAMC,YAAY,GAAG,QAAsC;AAAA,MAArC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,GAAqC;AAC1D,sBACC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACEF,SAAS,CAACG,MAAV,GACAH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBACrB,QAAC,QAAD;AAA4B,QAAA,IAAI,EAAEA;AAAlC,SAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,cADD,CADA,gBAKA;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YADD,eAUC,QAAC,YAAD,CACC;AACA;AACA;AACA;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAqBA,CAtBD;;KAAMP,Y;AAwBN,MAAMQ,eAAe,GAAGV,wBAAwB,CAAC;AAChDG,EAAAA,SAAS,EAAEJ;AADqC,CAAD,CAAhD;AAIA,eAAeG,YAAf","sourcesContent":["import React from 'react';\nimport CustomButton from '../custom-button/CustomButton.component';\nimport CartItem from '../cart-item/CartItem.component';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport './CartDropDown.styles.scss';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nconst CartDropDown = ({ cartItems, history, dispatch }) => {\n\treturn (\n\t\t<div className='cart-dropdown'>\n\t\t\t<div className='cart-items'>\n\t\t\t\t{cartItems.length ? (\n\t\t\t\t\tcartItems.map(cartItem => (\n\t\t\t\t\t\t<CartItem key={cartItem.id} item={cartItem} />\n\t\t\t\t\t))\n\t\t\t\t) : (\n\t\t\t\t\t<span className='empty-message'>Your cart is empty.</span>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<CustomButton\n\t\t\t\t// onClick={() => {\n\t\t\t\t// \thistory.push('/checkout');\n\t\t\t\t// \tdispatch(toggleCartHidden());\n\t\t\t\t// }}\n\t\t\t>\n\t\t\t\tGO TO CHECKOUT\n\t\t\t</CustomButton>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = createStructuredSelector({\n\tcartItems: selectCartItems,\n});\n\nexport default CartDropDown;\n"]},"metadata":{},"sourceType":"module"}