{"ast":null,"code":"var _jsxFileName = \"/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/pages/shop/ShopPage.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport './ShopPage.styles.scss';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collection-overview/CollectionOverview.component';\nimport CollectionsPage from '../collections/CollectionsPage.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport Spinner from '../../components/spinner/Spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewSpinner = Spinner(CollectionsOverview);\n_c = CollectionsOverviewSpinner;\nconst CollectionPageSpinner = Spinner(CollectionsPage);\n_c2 = CollectionPageSpinner;\n\nclass ShopPage extends Component {\n  constructor() {\n    super(...arguments);\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverview,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewSpinner, {\n          isLoading: isCollectionsLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionsPage,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageSpinner, {\n          isLoading: !isCollectionsLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewSpinner\");\n$RefreshReg$(_c2, \"CollectionPageSpinner\");","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/pages/shop/ShopPage.component.jsx"],"names":["React","Component","Route","connect","CollectionsOverview","CollectionsPage","fetchCollectionsStartAsync","Spinner","createStructuredSelector","selectIsCollectionFetching","CollectionsOverviewSpinner","CollectionPageSpinner","ShopPage","unsubscribeFromSnapShot","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAO,wBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,mEAAhC;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,OAAOC,OAAP,MAAoB,4CAApB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAASC,0BAAT,QAA2C,iCAA3C;;AAEA,MAAMC,0BAA0B,GAAGH,OAAO,CAACH,mBAAD,CAA1C;KAAMM,0B;AACN,MAAMC,qBAAqB,GAAGJ,OAAO,CAACF,eAAD,CAArC;MAAMM,qB;;AACN,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAChCY,uBADgC,GACN,IADM;AAAA;;AAGhCC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAER,MAAAA;AAAF,QAAiC,KAAKS,KAA5C;AACAT,IAAAA,0BAA0B;AAC1B;;AAEDU,EAAAA,MAAM,GAAE;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiC,KAAKH,KAA5C;AACA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACC,QAAC,KAAD;AACC,QAAA,KAAK,MADN;AAEC,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFrB;AAEwB,QAAA,SAAS,EAAEf,mBAFnC;AAGC,QAAA,MAAM,EAAEW,KAAK,iBACZ,QAAC,0BAAD;AACC,UAAA,SAAS,EAAEG,mBADZ;AAAA,aAEKH;AAFL;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cADD,eAWC,QAAC,KAAD;AACC,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBADrB;AACsC,QAAA,SAAS,EAAEd,eADjD;AAEC,QAAA,MAAM,EAAEU,KAAK,iBACZ,QAAC,qBAAD;AACC,UAAA,SAAS,EAAE,CAACG,mBADb;AAAA,aAEKH;AAFL;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cAXD;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAuBA;;AAjC+B;;AAmChC;AACD,MAAMK,eAAe,GAAGZ,wBAAwB,CAAC;AAChDa,EAAAA,oBAAoB,EAAEZ;AAD0B,CAAD,CAAhD;;AAGA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACvCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADH,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Route } from 'react-router-dom';\nimport './ShopPage.styles.scss';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collection-overview/CollectionOverview.component'\nimport CollectionsPage from '../collections/CollectionsPage.component'\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport Spinner from '../../components/spinner/Spinner.component';\nimport {createStructuredSelector} from 'reselect'\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\n\nconst CollectionsOverviewSpinner = Spinner(CollectionsOverview);\nconst CollectionPageSpinner = Spinner(CollectionsPage);\nclass ShopPage extends Component {\n\tunsubscribeFromSnapShot = null;\n\n\tcomponentDidMount() {\n\t\tconst { fetchCollectionsStartAsync } = this.props;\n\t\tfetchCollectionsStartAsync();\n\t}\n\n\trender(){\n\t\tconst { match, isCollectionsLoaded } = this.props;\n\t\treturn (\n\t\t<div className='shop-page'>\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath={`${match.path}`} component={CollectionsOverview}\n\t\t\t\trender={props => (\n\t\t\t\t\t<CollectionsOverviewSpinner\n\t\t\t\t\t\tisLoading={isCollectionsLoaded}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<Route\n\t\t\t\tpath={`${match.path}/:collectionId`} component={CollectionsPage}\n\t\t\t\trender={props => (\n\t\t\t\t\t<CollectionPageSpinner\n\t\t\t\t\t\tisLoading={!isCollectionsLoaded}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</div>\n\t);\n\t}\n\t\n};\nconst mapStateToProps = createStructuredSelector({\n\tisCollectionFetching: selectIsCollectionFetching\n})\nconst mapDispatchToProps = dispatch => ({\n\tfetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}