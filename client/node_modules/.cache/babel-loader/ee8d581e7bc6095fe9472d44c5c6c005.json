{"ast":null,"code":"var _jsxFileName = \"/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/pages/shop/ShopPage.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport './ShopPage.styles.scss';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview.component';\nimport CollectionsPage from '../collections/CollectionsPage.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/WithSpinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewSpinner;\nconst CollectionPageSpinner = WithSpinner(CollectionsPage);\n_c2 = CollectionPageSpinner;\n\nclass ShopPage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n    this.setState({});\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewSpinner, {\n          isLoading: this.state.loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageSpinner, {\n          isLoading: this.state.loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewSpinner\");\n$RefreshReg$(_c2, \"CollectionPageSpinner\");","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/pages/shop/ShopPage.component.jsx"],"names":["React","Component","Route","connect","CollectionsOverview","CollectionsPage","fetchCollectionsStartAsync","WithSpinner","createStructuredSelector","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionsOverviewSpinner","CollectionPageSpinner","ShopPage","state","loading","unsubscribeFromSnapShot","componentDidMount","props","setState","render","match","isCollectionLoaded","path","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAO,wBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,qEAAhC;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,OAAOC,WAAP,MAAwB,qDAAxB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAASC,0BAAT,EAAqCC,yBAArC,QAAsE,iCAAtE;;AAEA,MAAMC,0BAA0B,GAAGJ,WAAW,CAACH,mBAAD,CAA9C;KAAMO,0B;AACN,MAAMC,qBAAqB,GAAGL,WAAW,CAACF,eAAD,CAAzC;MAAMO,qB;;AACN,MAAMC,QAAN,SAAuBZ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAChCa,KADgC,GACxB;AACPC,MAAAA,OAAO,EAAE;AADF,KADwB;AAAA,SAIhCC,uBAJgC,GAIN,IAJM;AAAA;;AAMhCC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAEX,MAAAA;AAAF,QAAiC,KAAKY,KAA5C;AACAZ,IAAAA,0BAA0B;AAC1B,SAAKa,QAAL,CAAc,EAAd;AACA;;AAEDC,EAAAA,MAAM,GAAE;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAgC,KAAKJ,KAA3C;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACC,QAAC,KAAD;AACC,QAAA,KAAK,MADN;AAEC,QAAA,IAAI,EAAG,GAAEG,KAAK,CAACE,IAAK,EAFrB;AAGC,QAAA,MAAM,EAAEL,KAAK,iBACZ,QAAC,0BAAD;AACC,UAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWC,OADvB;AAAA,aAEKG;AAFL;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cADD,eAWC,QAAC,KAAD;AACC,QAAA,IAAI,EAAG,GAAEG,KAAK,CAACE,IAAK,gBADrB;AAEC,QAAA,MAAM,EAAEL,KAAK,iBACZ,QAAC,qBAAD;AACC,UAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWC,OADvB;AAAA,aAEKG;AAFL;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cAXD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAuBA;;AArC+B;;AAuChC;AACD,MAAMM,eAAe,GAAGhB,wBAAwB,CAAC;AAChDiB,EAAAA,oBAAoB,EAAEhB,0BAD0B;AAEhDa,EAAAA,kBAAkB,EAAEZ;AAF4B,CAAD,CAAhD;;AAIA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACvCrB,EAAAA,0BAA0B,EAAE,MAAMqB,QAAQ,CAACrB,0BAA0B,EAA3B;AADH,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,QAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Route } from 'react-router-dom';\nimport './ShopPage.styles.scss';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview.component'\nimport CollectionsPage from '../collections/CollectionsPage.component'\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/WithSpinner.component';\nimport {createStructuredSelector} from 'reselect'\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n\nconst CollectionsOverviewSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageSpinner = WithSpinner(CollectionsPage);\nclass ShopPage extends Component {\n\tstate = {\n\t\tloading: true\n\t}\n\tunsubscribeFromSnapShot = null;\n\n\tcomponentDidMount() {\n\t\tconst { fetchCollectionsStartAsync } = this.props;\n\t\tfetchCollectionsStartAsync();\n\t\tthis.setState({})\n\t}\n\n\trender(){\n\t\tconst { match, isCollectionLoaded } = this.props;\n\t\treturn (\n\t\t\t<div className='shop-page'>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={`${match.path}`}\n\t\t\t\t\trender={props => (\n\t\t\t\t\t\t<CollectionsOverviewSpinner\n\t\t\t\t\t\t\tisLoading={this.state.loading}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\t\trender={props => (\n\t\t\t\t\t\t<CollectionPageSpinner\n\t\t\t\t\t\t\tisLoading={this.state.loading}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\t\n};\nconst mapStateToProps = createStructuredSelector({\n\tisCollectionFetching: selectIsCollectionFetching,\n\tisCollectionLoaded: selectIsCollectionsLoaded\n})\nconst mapDispatchToProps = dispatch => ({\n\tfetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}