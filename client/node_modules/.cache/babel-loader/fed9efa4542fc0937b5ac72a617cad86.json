{"ast":null,"code":"var _jsxFileName = \"/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/components/with-spinner/WithSpinner.component.jsx\";\nimport React from 'react';\nimport { SpinnerContainer, SpinnerOverlay } from '../spinner/Spinner.styled.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WithSpinner = WrappedComponent => {\n  const Spinner = _ref => {\n    let {\n      isLoading,\n      ...otherProps\n    } = _ref;\n    return isLoading ? /*#__PURE__*/_jsxDEV(SpinnerOverlay, {\n      children: /*#__PURE__*/_jsxDEV(SpinnerContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(WrappedComponent, { ...otherProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this);\n  };\n\n  return Spinner;\n};\n\n_c = WithSpinner;\nexport default WithSpinner;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithSpinner\");","map":{"version":3,"sources":["/Users/ecomdean/FullStackYogi/crwn-clothing-react-fsyogi/src/components/with-spinner/WithSpinner.component.jsx"],"names":["React","SpinnerContainer","SpinnerOverlay","WithSpinner","WrappedComponent","Spinner","isLoading","otherProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACCC,gBADD,EAECC,cAFD,QAGO,qCAHP;;;AAKA,MAAMC,WAAW,GAAGC,gBAAgB,IAAI;AACvC,QAAMC,OAAO,GAAG,QAAkC;AAAA,QAAjC;AAAEC,MAAAA,SAAF;AAAa,SAAGC;AAAhB,KAAiC;AACjD,WAAOD,SAAS,gBACf,QAAC,cAAD;AAAA,6BACC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADe,gBAKf,QAAC,gBAAD,OAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA,YALD;AAOA,GARD;;AASG,SAAOF,OAAP;AACH,CAXD;;KAAMF,W;AAaN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport {\n\tSpinnerContainer,\n\tSpinnerOverlay,\n} from '../spinner/Spinner.styled.component';\n\nconst WithSpinner = WrappedComponent => {\n\tconst Spinner = ({ isLoading, ...otherProps }) => {\n\t\treturn isLoading ? (\n\t\t\t<SpinnerOverlay>\n\t\t\t\t<SpinnerContainer />\n\t\t\t</SpinnerOverlay>\n\t\t) : (\n\t\t\t<WrappedComponent {...otherProps} />\n\t\t);\n\t};\n    return Spinner;\n};\n\nexport default WithSpinner;\n"]},"metadata":{},"sourceType":"module"}